@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --boxDelta: 0;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

#colorAni:before {
  background: linear-gradient(
    90deg,
    rgba(0, 0, 0, 0.93) 11.2%,
    rgb(255, 255, 255) 78.9%
  );
  content: "";
  left: 0px;
  top: 0px;
  height: 100%;
  width: 0%;
  position: absolute;
  z-index: -1;
}

#colorAni:hover:before {
  transition: width 600ms ease;
  width: 100%;
}

#colorAni:hover {
  color: "blue";
}

#height {
  height: 40vh;
}

@media (min-width: 640px) {
  #height {
    height: 50vh;
  }
}

.element {
  padding-right: 2px;
  position: absolute;
  bottom: 0;
  background: linear-gradient(
    0deg,
    rgba(22, 22, 22, 1) 5%,
    rgba(210, 210, 210, 1) 100%
  );
}

.element-red {
  background: linear-gradient(
    0deg,
    rgba(22, 22, 22, 1) 5%,
    rgba(255, 0, 0, 1) 100%
  );
}

.element-green {
  animation: applyGreen 0.002s linear 0s 1 backwards;
  background: linear-gradient(
    0deg,
    rgba(22, 22, 22, 1) 5%,
    rgba(16, 140, 30, 1) 100%
  );
}

@keyframes applyGreen {
  0% {
    background: linear-gradient(
      0deg,
      rgba(22, 22, 22, 1) 5%,
      rgba(210, 210, 210, 1) 100%
    );
  }

  50% {
    background: linear-gradient(
      0deg,
      rgba(22, 22, 22, 1) 5%,
      rgba(16, 140, 30, 1) 100%
    );
  }

  100% {
    background: linear-gradient(
      0deg,
      rgba(22, 22, 22, 1) 5%,
      rgba(210, 210, 210, 1) 100%
    );
  }
}

/* .leftswap {
  animation: swapRTL 5s linear forwards;
}

@keyframes swapRTL {
  0% {
    transform: translateX(0px);
  }

  100% {
    transform: translateX(var(--boxDelta));
  }
}

.rightswap {
  animation: swapLTR 5s linear forwards;
}

@keyframes swapLTR {
  0% {
    transform: translateX(0px);
  }

  100% {
    transform: translateX(calc(-1 * var(--boxDelta)));
  }
} */
